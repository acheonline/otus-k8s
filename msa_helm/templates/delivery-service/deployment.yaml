apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-delivery-service
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: delivery-app
  template:
    metadata:
      name: {{ .Chart.Name }}
      labels:
        app: delivery-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.service.delivery.port }}"
        prometheus.io/path: "/prometheus"
    spec:
      containers:
        - name: news-delivery-service
          image: achernyavskiy0n/news-delivery:v1
          imagePullPolicy: Always
          env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}-consumer-config
                  key: KAFKA_BOOTSTRAP_SERVERS
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}-delivery-config
                  key: SERVER_PORT
          ports:
            - name: delivery-port
              containerPort: {{ .Values.service.delivery.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: delivery-port
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: delivery-port
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-delivery-config