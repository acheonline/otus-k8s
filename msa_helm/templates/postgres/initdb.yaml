apiVersion: batch/v1
kind: Job
metadata:
  name: db-migration
  labels:
    app: postgres
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: db-migration
    spec:
      restartPolicy: Never
      initContainers:
        - name: check-db-ready
          image: postgres:latest
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST
                  name: postgres-config
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PORT
                  name: postgres-config
          command:
            - sh
            - "-c"
            - |
              until pg_isready -h $POSTGRES_HOST  -p  $POSTGRES_PORT;
              do echo waiting for database; sleep 2; done;
      containers:
        - name: db-update
          image: {{ .Values.migrationService.image }}
          imagePullPolicy: Always
          env:
            - name: DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: DATASOURCE_URL
            - name: DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: DATASOURCE_USERNAME
            - name: DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: DATASOURCE_PASSWORD
  backoffLimit: 2