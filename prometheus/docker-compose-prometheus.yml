version: '3.7'

volumes:
  prometheus_data: { }
  grafana_data: { }

networks:
  back-tier:
    driver: bridge

services:
  postgres:
    container_name: 'postgres'
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: passwd
      POSTGRES_USER: myuser
      POSTGRES_DB: myapp
    networks:
      - back-tier
  user-service:
    image: 'user-service'
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      replicas: 1
    links:
      - postgres
    depends_on:
      - postgres
    ports:
      - "8011:8080"
    networks:
      - back-tier
    environment:
      JAVA_OPTS: "-Xss256k"
      DATASOURCE_URL: jdbc:postgresql://postgres:5432/myapp
      DATASOURCE_USERNAME: myuser
      DATASOURCE_PASSWORD: passwd

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./config/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - back-tier
    restart: always
    depends_on:
      - user-service
      - postgres
    links:
      - user-service
      - postgres
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
      - user-service
      - postgres
    links:
      - user-service
      - postgres
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
    restart: always

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points'
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - "9100:9100"
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080:8080"
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global
